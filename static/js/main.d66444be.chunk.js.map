{"version":3,"sources":["helper.js","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/Search Box/searchbox.component.jsx","App.js","reportWebVitals.js","index.js","config.js"],"names":["APICall","name","a","ts","Number","Date","hash","md5","create","update","Keys","PRIVATE_KEY","PUBLIC_KEY","fetch","hex","res","ok","Error","status","json","data","results","character","console","error","Card","props","className","alt","src","children","path","extension","CardList","map","hero","thumbnail","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","mystr","temp","this","forEach","then","push","filteredHeroes","filter","toLowerCase","includes","onClick","log","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d66444be.chunk.js","sourcesContent":["import md5 from \"js-md5\";\r\nimport Keys from \"./config\";\r\n\r\nexport const APICall = async function (name) {\r\n  try {\r\n    const ts = Number(new Date());\r\n    const hash = md5.create();\r\n    hash.update(ts + Keys.PRIVATE_KEY + Keys.PUBLIC_KEY);\r\n    const res = await fetch(\r\n      ` https://gateway.marvel.com/v1/public/characters?name=${name}&ts=${ts}&apikey=${\r\n        Keys.PUBLIC_KEY\r\n      }&hash=${hash.hex()}`\r\n    );\r\n    if (!res.ok) throw new Error(res.status);\r\n    //console.log(`Response `, res);\r\n    const data = await res.json();\r\n    const [character] = data.data.results;\r\n    //console.log(\"From API-Fetch\", character);\r\n    return character;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./card.styles.css\";\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"hero\"\r\n        src={`${props.children.path}/standard_large.${props.children.extension}`}\r\n      />\r\n      <h2>{props.name}</h2>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\nexport const CardList = (props) => (\r\n  //console.log(props);\r\n  <div className=\"card-list\">\r\n    {props.results.map((hero) => (\r\n      <Card key={hero.id} name={hero.name}>\r\n        {hero.thumbnail}\r\n      </Card>\r\n      // <h1 key={hero.id}>{hero.name}</h1>\r\n    ))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./searchbox.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    className=\"searchbox\"\r\n    type=\"text\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n  />\r\n);\r\n","import React, { Component } from \"react\";\n\nimport { APICall } from \"./helper\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/Search Box/searchbox.component.jsx\";\n//import logo from \"./logo.svg\";\nimport \"./App.css\";\n// http(s)://gateway.marvel.com/v1/public/characters/apikey=fb4c0d8362cd8532f8f23c2bb5eba7f3\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mystr: \"Marvel Heroes\",\n      results: [],\n      searchField: \"\",\n      hero: [\n        {\n          name: \"Doctor Strange\",\n          id: \"0\",\n        },\n        {\n          name: \"Spider-Man\",\n          id: \"1\",\n        },\n        {\n          name: \"Loki\",\n          id: \"2\",\n        },\n        {\n          name: \"Thor\",\n          id: \"3\",\n        },\n        {\n          name: \"Hulk\",\n          id: \"4\",\n        },\n        {\n          name: \"Iron Man\",\n          id: \"5\",\n        },\n        {\n          name: \"Black Panther\",\n          id: \"6\",\n        },\n        {\n          name: \"Vision\",\n          id: \"7\",\n        },\n        {\n          name: \"Groot\",\n          id: \"8\",\n        },\n        {\n          name: \"Captain America\",\n          id: \"9\",\n        },\n        {\n          name: \"Black Widow\",\n          id: \"10\",\n        },\n        {\n          name: \"Hawkeye\",\n          id: \"11\",\n        },\n      ],\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      //console.log(hash.hex());\n      const temp = [];\n      this.state.hero.forEach((hero) => {\n        APICall(hero.name).then((data) => {\n          temp.push(data);\n          this.setState({ results: temp });\n        });\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    //Filter results according to the user input in Textbox\n    const { searchField, results } = this.state;\n    const filteredHeroes = results.filter((hero) =>\n      hero.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>MARVEL HEROES</h1>\n        {/* SearchBox functional component */}\n        <SearchBox\n          placeholder=\"Search Hero\"\n          handleChange={this.handleChange}\n          //setState is asynchronous, therefore, to perform task after updating state put a call back func in the second argument\n        />\n\n        {/* Create Cards using API Result. */}\n        <CardList results={filteredHeroes}></CardList>\n\n        {/* If you want to see API Results in console */}\n        <button onClick={() => console.log(this.state.results)}>\n          SEE API RESULTS IN CONSOLE\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const PUBLIC_KEY = \"fb4c0d8362cd8532f8f23c2bb5eba7f3\";\r\nconst PRIVATE_KEY = \"1c2505c8ec1c7e65884333bdfb4e5193f2bbf55b\";\r\n\r\nmodule.exports = {\r\n  PUBLIC_KEY,\r\n  PRIVATE_KEY,\r\n};\r\n"],"sourceRoot":""}